// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using piqe.Core;

#nullable disable

namespace Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240218224534_DbInit")]
    partial class DbInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.Property<Guid>("ClassesKey")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("StudentsKey")
                        .HasColumnType("char(36)");

                    b.HasKey("ClassesKey", "StudentsKey");

                    b.HasIndex("StudentsKey");

                    b.ToTable("ClassStudent");
                });

            modelBuilder.Entity("piqe.Models.Attendence", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NotAttendingReason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudentKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Key");

                    b.HasIndex("StudentKey");

                    b.ToTable("Attendences");
                });

            modelBuilder.Entity("piqe.Models.Class", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TeacherKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Key");

                    b.HasIndex("TeacherKey");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("piqe.Models.Grade", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClassKey")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Grades")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("StudentKey")
                        .HasColumnType("char(36)");

                    b.HasKey("Key");

                    b.HasIndex("ClassKey");

                    b.HasIndex("StudentKey");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("piqe.Models.Parent", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Key");

                    b.ToTable("Parent");
                });

            modelBuilder.Entity("piqe.Models.Student", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Key");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("piqe.Models.Teacher", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TeacherId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Key");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("piqe.Models.User", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AccessLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ParentKey")
                        .IsRequired()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("StudentKey")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("TeacherKey")
                        .HasColumnType("char(36)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Key");

                    b.HasIndex("ParentKey");

                    b.HasIndex("StudentKey");

                    b.HasIndex("TeacherKey");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassStudent", b =>
                {
                    b.HasOne("piqe.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassesKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("piqe.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("piqe.Models.Attendence", b =>
                {
                    b.HasOne("piqe.Models.Student", "Student")
                        .WithMany("Attendence")
                        .HasForeignKey("StudentKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("piqe.Models.Class", b =>
                {
                    b.HasOne("piqe.Models.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("piqe.Models.Grade", b =>
                {
                    b.HasOne("piqe.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("piqe.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("piqe.Models.User", b =>
                {
                    b.HasOne("piqe.Models.Parent", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("piqe.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentKey");

                    b.HasOne("piqe.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherKey");

                    b.Navigation("Parent");

                    b.Navigation("Student");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("piqe.Models.Student", b =>
                {
                    b.Navigation("Attendence");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("piqe.Models.Teacher", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
